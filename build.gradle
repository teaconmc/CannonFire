/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 * This project uses @Incubating APIs which are subject to change.
 */

import java.time.Instant
import java.time.temporal.ChronoUnit

buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://maven.parchmentmc.org" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath group: "org.parchmentmc", name: "librarian", version: "1.+"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"

apply plugin: "eclipse"
apply plugin: "maven-publish"

ext {
    modId = "cannon_fire"
    projectId = "CannonFire"
    githubRepo = "teaconmc/CannonFire"
    artifactId = "CannonFire-Forge-1.18"
}

version = "0.1.3"
group = "org.teacon"
archivesBaseName = project.artifactId

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // mappings channel: "official", version: "1.18.2"
    mappings channel: "parchment", version: "2022.03.13-1.18.2"
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run_client")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods.create(project.modId) { it.source sourceSets.main }
        }

        server {
            workingDirectory project.file("run_server")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods.create(project.modId) { it.source sourceSets.main }
        }

        data {
            workingDirectory project.file("run_data")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods.create(project.modId) { it.source sourceSets.main }
            args "--mod", modId, "--existing-mod", modId, "--all", "--output", file("src/generated/resources/")
        }
    }
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

dependencies {
    minecraft "net.minecraftforge:forge:1.18.2-40.1.0"
}

jar {
    manifest {
        attributes([
            "Specification-Title"     : project.projectId,
            "Specification-Vendor"    : "ustc-zzzz",
            "Specification-Version"   : "1",
            "Implementation-Title"    : project.projectId,
            "Implementation-Version"  : "${project.version}",
            "Implementation-Vendor"   : "TeaConMC",
            "Implementation-Timestamp": "${Instant.now().truncatedTo(ChronoUnit.SECONDS)}"
        ])
    }
}

jar.finalizedBy("reobfJar")

publishing {
    publications {
        release(MavenPublication) {
            groupId = "org.teacon"
            artifactId = project.artifactId
            pom {
                name = "${project.projectId} for Minecraft 1.18"
                description = "A cannon which shoots player far away"
                url = "https://github.com/${project.githubRepo}"
                licenses {
                    license {
                        name = "BSD-3-Clause"
                        url = "https://github.com/${project.githubRepo}/blob/1.18-forge/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "ustc-zzzz"
                        name = "ustc-zzzz"
                    }
                }
                issueManagement {
                    system = "GitHub Issues"
                    url = "https://github.com/${project.githubRepo}/issues"
                }
                scm {
                    url = "https://github.com/${project.githubRepo}"
                    connection = "scm:git:git://github.com/${project.githubRepo}.git"
                    developerConnection = "scm:git:git@github.com:${project.githubRepo}.git"
                }
            }
            artifact jar
        }
    }
    repositories {
        maven {
            name = "teacon"
            url = "s3://maven/"
            credentials(AwsCredentials) {
                accessKey = System.env.ARCHIVE_ACCESS_KEY
                secretKey = System.env.ARCHIVE_SECRET_KEY
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        System.env.ARCHIVE_ACCESS_KEY && System.env.ARCHIVE_SECRET_KEY
    }
}

/**
 * A simple task to pass down the artifact name and path to other GitHub actions.
 */
task("githubActionOutput") {
    onlyIf {
        System.env.GITHUB_ACTIONS
    }
    doLast {
        println "::set-output name=artifact_path::${jar.archiveFile.get().asFile.absolutePath}"
        println "::set-output name=artifact_name::${jar.archiveFileName.get()}"
    }
}
